package PrototypeExample
public

abstract flowComponent
prototypes
  dt: data;
  incoming: in feature;
features
  insignal: in feature incoming;
  outsignal: out data port dt;
end flowComponent;

-- a dual redundant component pattern
abstract implementation flowComponent.primaryBackup
prototypes
  control: abstract flowComponent;
subcomponents
  primary: abstract control;
  backup:abstract control;
connections
  inprimary: feature insignal -> primary.insignal;
  inbackup: feature  insignal -> backup.insignal;
  outprimary: port primary.outsignal -> outsignal;
  outbackup: port backup.outsignal -> outsignal;
modes
  Primarymode: initial mode;
  Backupmode: mode;
end flowComponent.primaryBackup;

data signal
end signal;

data implementation signal.unit16
end signal.unit16;

process controller extends flowComponent ( dt => data signal.unit16, incoming => event data port signal.unit16 )
end controller;

system DualRedundantController extends
  flowComponent (dt => data signal.unit16, incoming => in event data port signal.unit16)
end DualRedundantController;

system implementation DualRedundantController.PrimaryBackup
    extends flowComponent.primaryBackup (control => process controller)
end DualRedundantController.PrimaryBackup;

end PrototypeExample;
