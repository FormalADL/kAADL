package RemoteCallExample
public
system simple
end simple;

system implementation simple.impl
subcomponents
  A: process caller_P.i;
  B: process remote_P.i;
connections
  AtoB: subprogram access A.DoCalc -> B.DoCalc;
end simple.impl;

process remote_P
features
  DoCalc: provides subprogram access Calc;
end remote_P;

process implementation remote_P.i
subcomponents
  t1: thread Remote;
connections
  t1conn: subprogram access t1.MyCalc -> DoCalc;
end remote_P.i;

thread Remote
features
  MyCalc: provides subprogram access Calc;
end Remote;

process caller_P
features
  DoCalc: requires subprogram access Calc;
end caller_P;

process implementation caller_P.i
subcomponents
  Q: thread caller;
connections
  calcconn: subprogram access DoCalc -> Q.MyCalc;
end caller_P.i;

thread caller
features
  MyCalc: requires subprogram access Calc;
end caller;

subprogram Calc
end Calc;
end RemoteCallExample;

package PrinterServerExample
public
  process printers
  features
    printonServer: provides subprogram access print;
    mainPrinter: in event port;
    backupPrinter: in event port;
  end printers;
 
  process implementation printers.threaded
  subcomponents
    A : thread printer in modes ( modeA );
    B : thread printer in modes ( modeB );
  connections
    printtoA: subprogram access A.print -> printonServer in modes (modeA);
    printtoB: subprogram access B.print -> printonServer in modes (modeB);
  modes
    modeA: initial mode;
    modeB: mode;
    modeA -[ backupPrinter ]-> modeB;
    modeB -[ mainPrinter ]-> modeA;
  end printers.threaded;
  thread printer
  features
    print : provides subprogram access print;
  end printer;
  
  subprogram print
  features
    filetoprint: in parameter file;
  end print;
  
  data file
  end file;
  process application
  features
    print: provides subprogram access print;
  end application;
  
  system ApplicationSystem
  end ApplicationSystem;
  system implementation ApplicationSystem.default
  subcomponents
    app: process Application;
    printserver: process Printers.threaded;
  connections
    appconn: subprogram access printserver.printonServer -> app.print;
  end ApplicationSystem.default;
end PrinterServerExample;

